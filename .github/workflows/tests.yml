name: Tests
on:
  push:
  pull_request:

env:
  solana_version: v1.16.13
  anchor_version: 0.28.0

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

#      - name: Set Solana path
#        run: echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
#
#      - uses: actions/cache@v3
#        name: cache solana cli
#        id: cache-solana
#        with:
#          path: |
#            ~/.cache/solana/
#            ~/.local/share/solana/
#          key: solana-${{ runner.os }}-v0000-${{ env.solana_version }}

      - uses: ./.github/actions/cache-solana

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: install node_modules
        run: yarn --frozen-lockfile --network-concurrency 2

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache rust
        uses: Swatinem/rust-cache@v2

      - name: install essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev

#      - name: install solana
#        if: steps.cache-solana.outputs.cache-hit != 'true'
#        run: |
#          sh -c "$(curl -sSfL https://release.solana.com/${{ env.solana_version }}/install)"
#          solana --version

  clippy-lint:
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Cache rust
        uses: Swatinem/rust-cache@v2
      - name: Run fmt
        run: cargo fmt -- --check
      - name: Run clippy
        run: cargo clippy -- --deny=warnings

  cargo-test:
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Cache rust
        uses: Swatinem/rust-cache@v2
      - uses: ./.github/actions/cache-solana
      - name: Run tests
        run: |
          cargo test-sbf

  yarn-lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache node dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Run lint
        run: yarn lint

  functional-test:
    needs: [clippy-lint, yarn-lint]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache node dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: install node_modules
        run: yarn --frozen-lockfile

      - uses: ./.github/actions/cache-solana

      - name: run tests
        run: yarn test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: program-logs
          path: .anchor/program-logs/*