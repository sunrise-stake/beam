name: Tests
on:
  push:
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/cache-solana

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: install node_modules
        run: yarn --frozen-lockfile --network-concurrency 2

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Cache rust
        uses: Swatinem/rust-cache@v2

      - name: install essentials
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config build-essential libudev-dev

  clippy-lint:
    needs: install
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Cache rust
        uses: Swatinem/rust-cache@v2
      - name: Run fmt
        run: cargo fmt -- --check
      - name: Run clippy
        run: cargo clippy -- --deny=warnings

  cargo-build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache rust
        uses: Swatinem/rust-cache@v2
      - uses: ./.github/actions/cache-solana
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('rust-toolchain.toml') }}
      - name: Build all programs
        run: cargo build-sbf
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: target
          if-no-files-found: error
          retention-days: 1

  cargo-test:
    needs: cargo-build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Cache rust
        uses: Swatinem/rust-cache@v2
      - uses: ./.github/actions/cache-solana
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('rust-toolchain.toml') }}
      - name: Run tests
        run: |
          cargo test-sbf


  yarn-build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Run build
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dists
          path: packages/sdks/*/dist
          if-no-files-found: error
          retention-days: 1

  yarn-lint:
    needs: yarn-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dists
          path: packages/sdks

      - name: Run lint
        run: |
          test -d packages/sdks/common/dist
          yarn lint

  functional-test:
    needs: [clippy-lint, yarn-lint, cargo-build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: install node_modules
        run: yarn --frozen-lockfile

      - name: Download JS build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dists
          path: packages/sdks

      - name: Download Rust build artifacts
        uses: actions/download-artifact@v3
        with:
          name: target
          path: .

      - uses: ./.github/actions/cache-solana
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('rust-toolchain.toml') }}
      - name: run tests
        run: |
          ls target/deploy
          #yarn anchor test --skip-build packages/tests/src/functional/beams/core.test.ts
          yarn test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: program-logs
          path: .anchor/program-logs/*